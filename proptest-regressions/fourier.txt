# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 9ed61d552bdccb45d39196a1de384c3f8e4f95a20f1b1f2937b9f4cb83b686ae # shrinks to a = 1264516321015019628, b = 1
cc b0386b4b78e70505b4195198964eee1bb48f7ac8046483e32c0d8db5c0571b77 # shrinks to a = 16412031860904944760, b = 1
cc 552cf9c5731f83a5110d55f68226ad88797216cc10314483d8ba9b38d6ac5349 # shrinks to a = BigInt { negative: false, digits: "[]" }
cc 3b3a6de10e0d4dda3bde49bbc01043528935db6d7716bea0f67b8d5a4422db2f # shrinks to inputs = AddFourierTermInputs { acc: BigInt { negative: false, digits: "[]" }, x: BigInt { negative: false, digits: "[0, 1]" }, pow: 1, order: 4, mod_exp: 1 }
cc 5718f9d34db0c84b619139a304b4facbc6eacbdf856a79080b2ef109e6c9037f # shrinks to a = BigInt { negative: true, digits: "[1]" }, b = BigInt { negative: false, digits: "[1]" }
cc be48fe97c4e05f7bf6eecb00e9a0763a06613fe38fb2078bf0a607f39aca77aa # shrinks to inputs = AddFourierTermInputs { acc: BigInt { negative: false, digits: "[fffffffffffffe84, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffff, ffffffffffffffa5, ea, 559, ffffffffffffff5b, 1a7, e0b94b1252919f7c, 3, a9, bf8b33ef7637f4bb, e1, fffffffffffffdc4, fffffffffffffff6, 3b75c1093a4a8407, fffffffffffffff6, 3d2f1b79606f9d89, bbebc0f8585635f5, 3e5, fffffffffffffdf3, 38, 3ae, fffffffffffffe6a, fffffffffffffcdc, 167, fffffffffffffef9, 228213c82a591957, 2e2, fc, 74f0e9f985c375ca, 2b, ffffffffffffffd6, 28b4570eb62a3f0, ffffffffffffffda, 2d1733b38fc586bd, fffffffffffffe35, fffffffffffffb8d, 718bbc61044e2266, fffffffffffffe3a, fffffffffffffe62, fffffffffffffebf, dab509aab205bf0b, 30e, fffffffffffffeef, aebdabb7384cfa9, b930ab25c78ac4ec, 5ff104848d87c0ad, ffffffffffffffd1, 43f98040c6906af1, 9b8b2894004ee01f, fffffffffffffff4, 30e, 3, 955, b037a6724a90a266, f80a4f064af2d852, 7d31ca47ba9f3849, 9ecee44a9a9966a1, fffffffffffffd85, 1, fffffffffffffd50, fffffffffffffe69, 259, 5c, 65, 39, f8ec710eb66ced9d, 28f8bafaad395da6, 8496a443733adf61, b73b3eb7540683e4, fffffffffffffed1, a2, ffffffffffffff7f, 14, dc0fb53ffa66ab15, ffffffffffffff99, fffffffffffffd6e, 36, bf0664e780d46c8, 109, 16, ffffffffffffff34, 105, d5fb33fe980c13e5, 757ff6871c1001a0, 136, fffffffffffffdc2, fffffffffffffb2b, 491d999288fdf0f, fffffffffffffe7d, fffffffffffffffb, fcc633371c424962, fffffffffffffe21, 44, 83405de7fd26a4c8, fffffffffffffeba, 1bc, cb, fffffffffffffe21, a4554364d7d62a6e, eb3b65f67a5ab98a, 4a9, 5fcbdfdc2ad50693, 84b, ed4c6b1792585882, 6c5f2807c06e90dd, a5c0fa843c72c681, bf1332327bd62d57, fffffffffffffff3, ffffffffffffffcd, 40, 149, fffffffffffffee8, 34, dd, fffffffffffffc11, 23dc196def37891c, b027f0a4865e0b80, 475150a231efb0f6, fffffffffffffeda, fc1f73366b8c6b79, 73, e7, 421d783d77ef19b4, 4cb1b5bc12d5e532, 37, fcc069143a5e8f7f, fffffffffffffcf4, dcbc7b83b6589159, aaa28a9d4a9d921f, 102, ffffffffffffffbd, ffffffffffffffd4, 8, ffffffffffffffe9, 98, fffffffffffffce3, c4d3af5f4904b7fc, d36d417116af1473, de, ffffffffffffff1f, bc436e0e797e99e3, ffffffffffffff27, 383, 9d84d2dc6481d010, 273, 9029d919a15f6d]" }, x: BigInt { negative: false, digits: "[185, ffffffffffffff9f, fffffffffffffda5, ffffffffffffff30, 25bedd049f1efefe, ffffffffffffff53, 45, db9c71e81d341397, e3, fffffffffffffd8c, fffffffffffffe9b, 5c24a9798a84e93d, fffffffffffffbd6, ffffffffffffffba, 2f, 74f7ae691d83edb2, 69, bd5dcd7c3e6c8530, 46, ffffffffffffff3f, 9db58b1526ac5061, e8, f64613e916af5d60, fffffffffffffefa, 6, fffffffffffff82d, 37, 25, afa97d65caa11ddb, 68d40240176bd868, ffffffffffffff15, 229352650e6ab41b, 3d3, fffffffffffffff4, 1d25d6a843993ece, 433a002b1c684fd2, e5345ae4fd507838, fffffffffffffe29, ffffffffffffff32, fffffffffffffffd, d1ff1141959c26d1, 4a, 42ab67f49281022b, ffffffffffffffff, ffffffffffffff44, 85293b441082ac6, ffffffffffffff45, 22, ffffffffffffff9d, 2ee, 322d602ef5e1f12, ac, c84f823f948dedd9, 116249ff0a7a111c, a7491e19cbbf61c3, 47, dcb93621025b4564, 314, 50a, ffffffffffffffb2, 20, 477, fffffffffffffe29, fffffffffffffef1, ffffffffffffff77, 35c963df6df7d390, fffffffffffffc72, ffffffffffffff5d, fffffffffffffe15, e2, fffffffffffffe5d, a, ffffffffffffff4a, fffffffffffffe8b, 8d, a6578f84ffec9548, e3e11e5b5c77a2ba, a5, ffffffffffffffab, ffffffffffffffff, fffffffffffffe4d, d1, fffffffffffffeb5, 162, ffffffffffffffda, 4a5, 40, ffffffffffffff7a, 2853c9dbf519367, fffffffffffffff4, 9, 2b4, fffffffffffffc30, ffffffffffffff57, 5b, 4c9, ffd6f56ccf77be3c, 906589e3c9c02fbe, 1ac4dbdadb7de93f, 86, 570744cb79f57f1d, 9ad4f3090415bb53, c2a26a9663fcdae6, bcd55017aa361c87, 1ee4b1a7e1654953, 4d0, fffffffffffffc33, 91, 75, 91, 456bd4a5937eb964, 158, 207, fae93ae6d99e819c, ffffffffffffffdb, 89117a1d464343ad, ffffffffffffff19, fffffffffffffe8d, d4aac5cb342e2ff3, ffffffffffffff82, fffffffffffffea2, 4a1a61dbbf1841b3, 3e2, 184, 180, fffffffffffffb0b, fffffffffffffe6d, c0, 3b76a917793685f5, fffffffffffffd61, 42910d730b0e2af1, 17e, ffffffffffffff45, ffffffffffffff12, ffffffffffffffa2, 46, 8d, dd, 34, da, e0, cc, fffffffffffffdd7, 5e5e5eabb94aa44b, 53, fffffffffffffe17, b3, 12e, fffffffffffffebc, ffffffffffffffb8, ffffffffffffffd2, da36a6e580726cf2, 244, 57, fffffffffffffd3e, 412682eca2ad68a3, 56aef8dd06fb64b7, 362, 440, e6e841738077c201, 3db9b7d6bd9eb7d, e9132b3540d8442b, f9c954165119b47a, 1cc, 2a, fffffffffffffdb2, ffffffffffffffec, 37830e099d0ee4d6, 8f20c2f8eaa02e25, 57, f7, ccd96e56b9c61c30, 16146df1af7e2af0, b14dd37624836588, fffffffffffffed3, b1]" }, pow: 1, order: 128, mod_exp: 176 }
